#此題使用5個點 但只給3個點 並告知是1024bits

from Crypto.Util.number import bytes_to_long, long_to_bytes
from z3 import *

shares = [
    (2740898742966601935114133183106529, 956157655799717714864508073016211621761609346753693883071835634336701162346899667843127478623689609421921959757635162027164435651849444039861798305449805669806060897098677034940051454923858123316418111771244842263136200150949),
    (4681515083705154508573047498744706, 8137729467373933116892508790883965853824225864544185629594304843306928863961691391715058478012421229999432914675335993933647800020626034683613711997688036772875553560302624022039862210798719189229119735618787699810723188634719),
    (713083567420521725647105281913383, 4380455310144784872605974709167150361708365833979536574950088299593054964905207611091625844071796262320158274849703026573280865132707680730814638177402685313693168998262565678693098484143079216308958193534983606222931969247)
]


c0_min = bytes_to_long(b"flag{00000000000000000000000000000000}")
c0_max = bytes_to_long(b"flag{ffffffffffffffffffffffffffffffff}")

s = Solver()

coefs = [Int(f"c{i}")for i in range(5)]
for i in coefs:
    s.add(i > 0)
s.add(coefs[0] > c0_min)
s.add(coefs[0] < c0_max)

for x, y in shares:
    lhs = y
    rhs = sum([(x ** idx) * c for idx, c in enumerate(coefs)])
    s.add(lhs == rhs)

print(s.check())
model = s.model()
print(model)

pln = model[coefs[0]].as_long()
print(long_to_bytes(pln))