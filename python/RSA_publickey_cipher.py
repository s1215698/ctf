#coding=utf-8
#以下情形可考慮使用
#########1.提供一個密文和公鑰檔案
#2.透過openssl rsa -pubin -in [公鑰檔] -text -mudulus -noout 查得 n 和加密參數e
#3.n先轉成10進位 去http://factordb.com/ 利用n取p q值
#4.去算私鑰



from struct import pack
import gmpy2
import libnum
from Crypto.Util.number import *
import rsa




n
e=65537 

p=260687538913047604611581784183499992008451760653785074016920718323190075912750802620741024634382067897986936407072164858
654195035172056629230527593989978466296098220579031027154724041642557344915423242566240332284307941704981938020407661739
104882149483433969072174052675580644164713319546908058746795753762649896919296312912702039493797237183118384499796757914
157936629672274357161577311007769338358918777509136488505959298049498018461823273893799669038335872602861372239911549680
531979970541528181711754520442958622706059603000655429088872469604344301647170492716926975027102329909258120989355802343
558462047316328752521306824960655230501606894696454547299868668551619819367530969111390441903346427083466873717778205853
984905381790237396069409514016317067322105019049986366714245693681256834514176535381210683575566036929609986694319036120
560201862975426434985372574748540556000702736560930190396248279747095930579691977036607335841985416541503515963817848780
705827093841092321324825882821075072622553561916744473353548759606182352622008019859330726239330083782855413787656845382
479896229326659871568516059343215385393836820040891163826148343904385963328442668250413125432533185139042633099387310968
853063208000057718438859818276275817262048678368751842523947169311954597690408896814857060351
q=260687538913047604611581784183499992008451760653785074016920718323190075912750802620741024634382067897986936407072164858
654195035172056629230527593989978466296098220579031027154724041642557344915423242566240332284307941704981938020407661739
104882149483433969072174052675580644164713319546908058746795753762649896919296312912702039493797237183118384499796757914
157936629672274357161577311007769338358918777509136488505959298049498018461823273893799669038335872602861372239911549680
531979970541528181711754520442958622706059603000655429088872469604344301647170492716926975027102329909258120989355802343
558462047316328752521306824960655230501606894696454547299868668551619819367530969111390441903346427083466873717778205853
984905381790237396069409514016317067322105019049986366714245693681256834514176535381210683575566036929609986694319036120
560201862975426434985372574748540556000702736560930190396248279747095930579691977036607335841985416541503515963817848780
705827093841092321324825882821075072622553561916744473353548759606182352622008019859330726239330083782855413787656845382
479896229326659871568516059343215385393836820040891163826148343904385963328442668250413125432533185139042633099387310968
853063208000057718438859818276275817262048678368751842523947169311954597690408896814857060353

d=int(gmpy2.invert(e,(p-1)*(q-1)))


privatekey = rsa.PrivateKey(n , e , d , p , q)
with open("C:\ctf_share\cipher.bin","rb") as f:
    print(rsa.decrypt(f.read(),privatekey).decode())






'''
file = open("C:\\fllllllag.txt","rb")
c = int.from_bytes(file.read(),byteorder='big')
m= long_to_bytes(pow(c,d,n))
print (m)
'''