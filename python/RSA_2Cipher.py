#coding=utf-8
#需用python2.7
#以下情形可考慮使用
#1.有兩組C(密文) 兩組n 加密指數e相同
#2.利用兩個n求最大公因數得出p數值  ==>依序求出q值
#3.利用gmpy.invert 去求得私鑰
#4.用pow去求明文


import gmpy2
import libnum
from Crypto.Util.number import *

n1=int(0xc7a8d432c058915d969882ecf1786cef895b2d57f8897212aa784456884fec1b1b3045f48cc0471836300d60f42541276a5ab50039fd99299f09f5265379d59c6064708bf8bcb508d6dc935c1a9418159990f4f3865b7db186f8607a9de73efd1a1ff09d2ed393c673b8b84cc91fdc32aaf39c1ab66198228df5e0d18099472681ba808b7c0ebfd69a7bf5de5d882614ce3803913c6a08c33cd2086da5143334ae902e7d74e64e16b11c31e3866bdf2537e101f733733d92ea7375d3146f9816eaac8ee335f5dc74872fb6a528d8abf0c651853c8dc6479f13c7a97d636cc5282843fdf4bb90744aca4f7cfb158e76fba71d2841c6e58195bf53419266374ef9)

e1=int(0x10001)
c1=int(0x498d041cb49a31fa83b06abdd9130c56ed62abf28007f958fbbde8420c8fa0681519224c9fff6940140ae2dff9983a8449a8893af7867a96b0557ccc4a8aee24aa1619014ba117887ca58e3e804c444234a2ddbbf55c5538e483fa341e779a1f6a2fa47b0e1e8661a6f207bde9a4610a38eca29dad43cbb8e70f2ccf3dc500d3815eeae4e3438fe513906c8bb2a7de050257b403bf45364f68b28ee0800b63d8c1e695f0e8ec01cf1da8760deca967f317d280fc8c3866f2515b10f61108536fa55c30c513679eb29d04846dec834ba47ba12ac81a8a9c4fcdd973cbd7caed6b55a5413db2428921cc5ce8f19ac98153ee6d2fe09af4221423c347de88e62a84)

n2=int(0xa229b53e4e5e52e98029b13a62b39c54ac912d46e136947e911bfe6cd33f95c04291e72cf1497c0c3b965c45cfbd3c104a23a183ad29d1bfc0483e03c1c1eecefc1c97d8c4d02a4f5c64d39d9b2f903b6ece2a50955961d7255b01906d0cd46ef7a4e897f77154f76a605c27b08ad10d6664aa3fad5db0d3e990a825cc396e7ea26e8809ed19a73cf291e21bacc755cf8dadf01cf69b684ee9962bc831a860074066fa07e8be47106adf293fc6457239c6eb3465fa8fa43bf1224d952f283785b73cd781fabf769c845db4f11cd0c40b6e71711fd0c96e019bcf7f47ed14c84ada263fdf12f3a81b5ea969e4feab70417ff7c208b164f09ea11c042c94f09ec3)
e2=int(0x10001)
c2=int(0x7fcc807a26eb5470f2a7d20c9ed7f1132ea0e5cd0c144fa2dc81d497af560f759472a6fedd209fed201e5c1c785215471c7b3369e2601bdf28c9f66b3d9e664a3e56f8d7d8fe9f779849342a113128163e916e9ffa392bb15f223cd2df05fc81b272adb8423b9cc4e87073fae2a6709347c1ad421c12559e2c9343aafa3b8c331c20454b27ad7752d374e450b4d6038abfc67a7e1c2e98f8061c797577da7fd09a1103dd6c433e429dbc3a9c982ccf6799529bc1c367515d52ae47e22ab9f2f9ef63cc8736c0e578fa2aaa10ed27409ead447cc0f301301a3b32c62e8f8bc62785de9dc2bd09bee96f75efbd260a380aa580165b57b489a7ee94681c3b3d80a7)


p1=gmpy2.gcd(n1,n2)
p2=gmpy2.gcd(n1,n2)

q1=n1/p1
q2=n2/p2

d1=gmpy2.invert(e1,(p1-1)*(q1-1))
d2=gmpy2.invert(e2,(p2-1)*(q2-1))

m1=long_to_bytes(pow(c1,d1,n1))
m2=long_to_bytes(pow(c2,d2,n2))


print (m1)

#print(m2.encode("utf-8"))